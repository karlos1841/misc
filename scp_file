#!/usr/bin/python

import sys
import getopt
import subprocess
import threading
from Queue import Queue


def print_help(DEFAULT_VALS):
	print('''Secure copy file or directory content

Available options:
-f	file or directory name, to specify multiple files or directories use comma separated paths(use absolute path)
-t	targets comma separated(DEFAULT: %s)
	''' % DEFAULT_VALS[0])
	sys.exit(0)

def run_cmd(CMD):
	proc = subprocess.Popen(CMD, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
	stdout, stderr = proc.communicate()
	if proc.returncode != 0:
		output = [proc.returncode, stdout, stderr]
		return output
	output = [0, stdout, '']
	return output

def threader(files):
	while True:
		worker = q.get()
		scp(worker, files)
		q.task_done()

def scp(HOST, files):
	for FILE in files:
		RETURN_STATUS = run_cmd('scp -r ' + FILE + ' ' + HOST + ':' + FILE)
		if RETURN_STATUS[0] != 0:
			with print_lock:
				print ("ERROR: " + FILE + " has not been sent to " + HOST)
				print RETURN_STATUS[2]
		else:
			with print_lock:
				print(FILE + ' has been copied to ' + HOST)

if __name__ == '__main__':
	# DEFAULT VALUES
	TARGET = 'p1,p2,k1,k2,bi,by,gw,sz,zg,dmz'
	DEFAULT_VALS = [TARGET]

	if len(sys.argv) == 1:
		print_help(DEFAULT_VALS)
	try:
		opts, args = getopt.getopt(sys.argv[1:], 'hf:t:', ['help'])
	except getopt.GetoptError as err:
		print("Error: " + str(err))
		sys.exit(2)
	if not opts:
		print("Error: no option given")
		print("Type " + sys.argv[0] + " --help to print help")
		sys.exit(2)


	try:
		for opt, arg in opts:
			if opt in ('-h', '--help'):
				print_help(DEFAULT_VALS)
			elif opt == '-f':
				FILENAME = arg
			elif opt == '-t':
				TARGET = arg
			else:
				print("ERROR: Unhandled option")
				print("Type " + sys.argv[0] + " --help to print help")
				sys.exit(2)

		hosts = TARGET.split(',')
		files = FILENAME.split(',')

		print_lock = threading.Lock()
		q = Queue()
		for x in range(20):
			t = threading.Thread(target=threader, args=(files,))
			t.daemon = True
			t.start()
		for worker in hosts:
			q.put(worker)
		q.join()
	except NameError:
		print("ERROR: Some of the options were not defined")
		print("Type " + sys.argv[0] + " --help to print help")
		sys.exit(2)
	except KeyboardInterrupt:
		print("ERROR: Sending file interrupted")
		sys.exit(2)
